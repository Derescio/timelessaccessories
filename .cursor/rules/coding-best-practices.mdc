---
description: Coding Best Practices for Cursor
globs: 
alwaysApply: true
---

## General Principles
- **Do not modify working code or UI unless explicitly instructed.**
- Confirm before making any destructive changes (e.g., deleting code/data).
- Ask clarifying questions if requirements are unclear.
- Follow DRY (Don’t Repeat Yourself) and KISS (Keep It Simple, Stupid) principles.
- Strive for production-grade, maintainable, and modern code with zero technical debt.

## Commit & Workflow
- Commit frequently to maintain clear project history.
- Kill all terminals/sessions before running a new build.
- Provide plain-English explanations for technical decisions.
- Remove unused code instead of leaving it “just in case.”

## Testing
- Write comprehensive tests for all new or modified functionality.
- Validate all UI changes thoroughly before merging.

## Lessons
- Always check the `lessons.md` file for guidance before solving issues.

## User Interface (UI)
- Only change UI components if explicitly required or clearly part of the task.
- Ensure UI modifications are tested across relevant devices and states.

## Build & Tools
- Always use **TailwindCSS v4 syntax** (refer to official v4 docs).
- Use TypeScript (not JavaScript) for all React/Next.js projects.
- Do not suppress or ignore TypeScript errors — fix them immediately.
- Never use `any` unless absolutely necessary, with documented justification.
- Centralize all types in a `.utils/types/index.ts` file, with clear comments.

## Code Style
- Write self-documenting code with descriptive naming.
- Prioritize readability and developer experience.
- Use consistent, clean formatting and follow project conventions.
- Add small plain-English comments if something is non-obvious.

## Quality & Maintainability
- Eliminate redundant or speculative code.
- Identify potential issues early and suggest actionable fixes.
- Follow established design patterns appropriate for the language and framework.
